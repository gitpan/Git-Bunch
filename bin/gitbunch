#!/usr/bin/perl

# workaround for dzil
package gitbunch;

use 5.010;
use strict;
use warnings;

our $VERSION = '0.20'; # VERSION

use Perinci::CmdLine;
Perinci::CmdLine->new(
    url => '/Git/Bunch/',
    subcommands => {
        check  => { url => '/Git/Bunch/check_bunch'  },
        sync   => { url => '/Git/Bunch/sync_bunch'   },
        backup => { url => '/Git/Bunch/backup_bunch' },
        exec   => { url => '/Git/Bunch/exec_bunch'   },
    }
)->run;

1;
# ABSTRACT: Manage gitbunch directory (directory which contain git repos)


__END__
=pod

=head1 NAME

gitbunch - Manage gitbunch directory (directory which contain git repos)

=head1 VERSION

version 0.20

=head1 DESCRIPTION

See L<Git::Bunch> for more documentation.

=head1 FAQ

=head2 How to see more verbose/debugging output?

B<gitbunch> uses L<Log::Any::App>. You can customize logging levels using a
variety of ways, e.g. environment variable:

 % TRACE=1 gitbunch ...

By default it also writes log to ~/gitbunch.log. You can disable this using:

 % FILE_LOG_LEVEL=off gitbunch ...

Or you can customize the level using:

 % FILE_QUIET=1 gitbunch ...

See the documentation for Log::Any::App for more details.

=head1 AUTHOR

Steven Haryanto <stevenharyanto@gmail.com>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2012 by Steven Haryanto.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut

